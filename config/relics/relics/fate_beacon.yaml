abilitiesData:
    abilities:
        compass:
            # Highest level to which the ability can be upgraded
            maxLevel: 0
            # Relic level at which the ability becomes unlocked
            requiredLevel: 0
            # Number of leveling points needed to increase the ability level
            requiredPoints: 1
            stats: {
                }
        set_beacon:
            # Highest level to which the ability can be upgraded
            maxLevel: 0
            # Relic level at which the ability becomes unlocked
            requiredLevel: 0
            # Number of leveling points needed to increase the ability level
            requiredPoints: 1
            stats: {
                }
        instant_return:
            # Highest level to which the ability can be upgraded
            maxLevel: 4
            # Relic level at which the ability becomes unlocked
            requiredLevel: 0
            # Number of leveling points needed to increase the ability level
            requiredPoints: 1
            stats:
                delay:
                    # Maximum base value of the stat. A random value within this range is assigned when the relic is first created
                    maxInitialValue: 2.0
                    # Maximum threshold value for the stat, representing hard limits that cannot be surpassed through ability level upgrades or other methods
                    maxThresholdValue: 1.7976931348623157E308
                    # Minimum base value of the stat. A random value within this range is assigned when the relic is first created
                    minInitialValue: 8.0
                    # Minimum threshold value for the stat, representing hard limits that cannot be surpassed through ability level upgrades or other methods
                    minThresholdValue: 4.9E-324
                    # Modifier applied to the base value of the stat, depending on the [upgradeOperation] parameter.
                    upgradeModifier: -0.5
                    # Type of mathematical operation used to calculate the stat's value based on the ability level. Supported operations include:
                    # MULTIPLY_BASE: x + ((x * y) * z),
                    # MULTIPLY_TOTAL: x * (y + 1)^z,
                    # ADD: x + (y * z).
                    # 
                    # ...where x - Base stat value, y - Value of [upgradeModifier], z - Current relic level
                    upgradeOperation: MULTIPLY_TOTAL
levelingData:
    # Amount of experience required to level up to relic level 1
    initialCost: 150
    # Maximum level of the relic
    maxLevel: 20
    # Increment in experience required for each subsequent level of the relic
    step: 100
lootData:
    # List of conditions for obtaining the relic. Supports both direct ID specification and regular expressions.
    entries:
    -   biomes:
        - .*
        dimensions:
        - minecraft:overworld
        tables:
        - '[\w]+:chests\/[\w_\/]*rare[\w_\/]*'
        weight: 250
    -   biomes:
        - .*
        dimensions:
        - minecraft:overworld
        tables:
        - '[\w]+:chests\/[\w_\/]*legendary[\w_\/]*'
        weight: 250
    -   biomes:
        - .*
        dimensions:
        - .*
        tables:
        - '[\w]+:chests\/[\w_\/]*(end|stronghold)[\w_\/]*'
        weight: 500
